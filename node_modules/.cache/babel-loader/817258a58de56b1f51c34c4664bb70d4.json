{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/cloudpanel/Documents/Interview/todo-frontend/src/App.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"./components/Modal\";\nimport axios from 'axios';\naxios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\";\naxios.defaults.xsrfCookieName = \"csrftoken\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.refreshList = () => {\n      axios.get(\"/api/todos/\").then(res => this.setState({\n        todoList: res.data\n      })).catch(err => console.log(err));\n    };\n\n    this.displayCompleted = status => {\n      if (status) {\n        return this.setState({\n          viewCompleted: true\n        });\n      }\n\n      return this.setState({\n        viewCompleted: false\n      });\n    };\n\n    this.renderTabList = () => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"my-5 tab-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(true),\n          className: this.state.viewCompleted ? \"active\" : \"\",\n          children: \"complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: () => this.displayCompleted(false),\n          className: this.state.viewCompleted ? \"\" : \"active\",\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this);\n    };\n\n    this.renderItems = () => {\n      const {\n        viewCompleted\n      } = this.state;\n      const newItems = this.state.todoList.filter(item => item.completed === viewCompleted);\n      console.log(newItems);\n      lert;\n      return newItems.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"list-group-item d-flex justify-content-between align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `todo-title mr-2 ${this.state.viewCompleted ? \"completed-todo\" : \"\"}`,\n          title: item.description,\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.editItem(item),\n            className: \"btn btn-secondary mr-2\",\n            children: [\" \", \"Edit\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDelete(item),\n            className: \"btn btn-danger\",\n            children: [\"Delete\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this));\n    };\n\n    this.toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    };\n\n    this.handleSubmit = item => {\n      this.toggle();\n\n      if (item.id) {\n        axios.put(`/api/todos/${item.id}/`, item).then(res => this.refreshList());\n        return;\n      }\n\n      axios.post(\"/api/todos/\", item).then(res => this.refreshList());\n    };\n\n    this.handleDelete = item => {\n      axios.delete(`/api/todos/${item.id}`).then(res => this.refreshList());\n    };\n\n    this.createItem = () => {\n      const item = {\n        title: \"\",\n        description: \"\",\n        completed: false\n      };\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.editItem = item => {\n      this.setState({\n        activeItem: item,\n        modal: !this.state.modal\n      });\n    };\n\n    this.state = {\n      viewCompleted: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false\n      },\n      todoList: []\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white text-uppercase text-center my-4\",\n        children: \"Todo app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-md-6 col-sm-10 mx-auto p-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card p-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.createItem,\n                className: \"btn btn-primary\",\n                children: \"Add task\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this), this.renderTabList(), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-group list-group-flush\",\n              children: this.renderItems()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this), this.state.modal ? /*#__PURE__*/_jsxDEV(Modal, {\n        activeItem: this.state.activeItem,\n        toggle: this.toggle,\n        onSave: this.handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 15\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/cloudpanel/Documents/Interview/todo-frontend/src/App.js"],"names":["React","Component","Modal","axios","defaults","xsrfHeaderName","xsrfCookieName","App","constructor","props","refreshList","get","then","res","setState","todoList","data","catch","err","console","log","displayCompleted","status","viewCompleted","renderTabList","state","renderItems","newItems","filter","item","completed","lert","map","description","title","editItem","handleDelete","id","toggle","modal","handleSubmit","put","post","delete","createItem","activeItem","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n    import Modal from \"./components/Modal\";\n    import axios from 'axios'; axios.defaults.xsrfHeaderName = \"X-CSRFTOKEN\"; axios.defaults.xsrfCookieName = \"csrftoken\";\n\n    class App extends Component {\n      constructor(props) {\n        super(props);\n        this.state = {\n          viewCompleted: false,\n          activeItem: {\n            title: \"\",\n            description: \"\",\n            completed: false\n          },\n          todoList: []\n        };\n      }\n      componentDidMount() {\n        this.refreshList();\n      }\n      refreshList = () => {\n        axios\n          .get(\"/api/todos/\")\n          .then(res => this.setState({ todoList: res.data }))\n          .catch(err => console.log(err));\n      };\n      displayCompleted = status => {\n        if (status) {\n          return this.setState({ viewCompleted: true });\n        }\n        return this.setState({ viewCompleted: false });\n      };\n      renderTabList = () => {\n        return (\n          <div className=\"my-5 tab-list\">\n            <span\n              onClick={() => this.displayCompleted(true)}\n              className={this.state.viewCompleted ? \"active\" : \"\"}\n            >\n              complete\n            </span>\n            <span\n              onClick={() => this.displayCompleted(false)}\n              className={this.state.viewCompleted ? \"\" : \"active\"}\n            >\n              Incomplete\n            </span>\n          </div>\n        );\n      };\n      renderItems = () => {\n        const { viewCompleted } = this.state;\n        const newItems = this.state.todoList.filter(\n          item => item.completed === viewCompleted\n        );\n        console.log(newItems)\n        lert\n        return newItems.map(item => (\n          <li\n            key={item.id}\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\n          >\n            <span\n              className={`todo-title mr-2 ${\n                this.state.viewCompleted ? \"completed-todo\" : \"\"\n              }`}\n              title={item.description}\n            >\n              {item.title}\n            </span>\n            <span>\n              <button\n                onClick={() => this.editItem(item)}\n                className=\"btn btn-secondary mr-2\"\n              >\n                {\" \"}\n                Edit{\" \"}\n              </button>\n              <button\n                onClick={() => this.handleDelete(item)}\n                className=\"btn btn-danger\"\n              >\n                Delete{\" \"}\n              </button>\n            </span>\n          </li>\n        ));\n      };\n      toggle = () => {\n        this.setState({ modal: !this.state.modal });\n      };\n      handleSubmit = item => {\n        this.toggle();\n        if (item.id) {\n          axios\n            .put(`/api/todos/${item.id}/`, item)\n            .then(res => this.refreshList());\n          return;\n        }\n        axios\n          .post(\"/api/todos/\", item)\n          .then(res => this.refreshList());\n      };\n      handleDelete = item => {\n        axios\n          .delete(`/api/todos/${item.id}`)\n          .then(res => this.refreshList());\n      };\n      createItem = () => {\n        const item = { title: \"\", description: \"\", completed: false };\n        this.setState({ activeItem: item, modal: !this.state.modal });\n      };\n      editItem = item => {\n        this.setState({ activeItem: item, modal: !this.state.modal });\n      };\n      render() {\n        return (\n         \n          <main className=\"content\">\n            <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n            <div className=\"row \">\n              <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n                <div className=\"card p-3\">\n                  <div className=\"\">\n                    <button onClick={this.createItem} className=\"btn btn-primary\">\n                      Add task\n                    </button>\n                  </div>\n                  {this.renderTabList()}\n                  <ul className=\"list-group list-group-flush\">\n                    {this.renderItems()}\n                  </ul>\n                </div>\n              </div>\n            </div>\n            {this.state.modal ? (\n              \n              <Modal\n                activeItem={this.state.activeItem}\n                toggle={this.toggle}\n                onSave={this.handleSubmit}\n              />\n            ) : null}\n          </main>\n        );\n      }\n    }\n    export default App;"]},"metadata":{},"sourceType":"module"}